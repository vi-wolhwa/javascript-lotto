(()=>{"use strict";const t={INPUT:{tryCount:5,winningNumbersDelimiter:","},OUTPUT:{lottoNumbersDelimiter:", "},LOTTO:{price:1e3,minNumber:1,maxNumber:45,count:6},RANK:[1,2,3,4,5,6],RANK_CONDITION:{1:{matchingCount:6},2:{matchingCount:5,bonusMatch:!0},3:{matchingCount:5,bonusMatch:!1},4:{matchingCount:4},5:{matchingCount:3},6:{}},PRIZE_BY_RANK:{1:2e9,2:3e7,3:15e5,4:5e4,5:5e3,6:0},WINNING_RESULT:{1:0,2:0,3:0,4:0,5:0,6:0},RESTART:{y:!0,Y:!0,n:!1,N:!1}};function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function n(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}const r=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,r;return e=t,r=[{key:"randomPickNumber",value:function(t,e){var n=Math.ceil(t),r=Math.floor(e);return Math.floor(Math.random()*(r-n+1))+n}},{key:"pickCombination",value:function(t,e,n){for(var r=new Set;r.size<n;)r.add(this.randomPickNumber(t,e));return Array.from(r)}}],null&&n(e.prototype,null),r&&n(e,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==o(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}function a(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function u(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}var c=new WeakMap,l=new WeakSet;function f(t){return t.sort((function(t,e){return t-e}))}const s=function(){function t(e){var n,r,o,i;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),a(this,n=l),n.add(this),function(t,e,n){a(t,e),e.set(t,{writable:!0,value:void 0})}(this,c),r=this,o=c,i=function(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}(this,l,f).call(this,e),function(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}(r,u(r,o,"set"),i)}var e,n;return e=t,(n=[{key:"getNumbers",value:function(){return function(t,e){return e.get?e.get.call(t):e.value}(this,u(this,c,"get"))}}])&&i(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function y(t){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},y(t)}function m(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function b(t,e,n){return(e=h(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,h(r.key),r)}}function h(t){var e=function(t,e){if("object"!==y(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===y(e)?e:String(e)}var d=new WeakSet;function w(){return r.pickCombination(t.LOTTO.minNumber,t.LOTTO.maxNumber,t.LOTTO.count)}const g=function(){function e(){var t,n;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),function(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}(t=this,n=d),n.add(t)}var n,r;return n=e,r=[{key:"calculateIssueQuantity",value:function(e){return Math.floor(e/t.LOTTO.price)}},{key:"issueLottos",value:function(t){var e=this;return Array.from({length:t},(function(){return new s(function(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}(e,d,w).call(e))}))}},{key:"determineLottoRanks",value:function(e,n){var r=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach((function(e){b(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t.WINNING_RESULT);return e.forEach((function(t){var e=n.determineRank(t);r[e]+=1})),r}},{key:"calculateProfitRate",value:function(e){return Object.entries(e).reduce((function(e,n){var r,o,i=(o=2,function(t){if(Array.isArray(t))return t}(r=n)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(r,o)||function(t,e){if(t){if("string"==typeof t)return m(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?m(t,e):void 0}}(r,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[0];return e+i[1]*t.PRIZE_BY_RANK[a]}),0)/(Object.values(e).reduce((function(t,e){return t+e}),0)*t.LOTTO.price)*100}}],r&&v(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==S(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==S(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===S(o)?o:String(o)),r)}var o}function T(t,e){E(t,e),e.add(t)}function j(t,e,n){E(t,e),e.set(t,n)}function E(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function A(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,N(t,e,"get"))}function k(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}function P(t,e,n){return function(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}(t,N(t,e,"set"),n),n}function N(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}var I=new WeakMap,L=new WeakMap,C=new WeakSet,R=new WeakSet,M=new WeakSet;function W(t){var e=this;return t.reduce((function(t,n){return t+A(e,I).includes(n)}),0)}function U(t){return t.includes(A(this,L))}function D(e,n,r){var o,i,a=t.RANK_CONDITION[e],u=null!==(o=a.matchingCount)&&void 0!==o?o:n,c=null!==(i=a.bonusMatch)&&void 0!==i?i:r;return u===n&&c===r}const x=function(){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),T(this,M),T(this,R),T(this,C),j(this,I,{writable:!0,value:void 0}),j(this,L,{writable:!0,value:void 0}),P(this,I,t),P(this,L,n)}var n,r;return n=e,(r=[{key:"determineRank",value:function(e){var n=this,r=e.getNumbers(),o=k(this,C,W).call(this,r),i=k(this,R,U).call(this,r);return t.RANK.find((function(t){return k(n,M,D).call(n,t,o,i)}))}}])&&O(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function z(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function _(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==q(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===q(o)?o:String(o)),r)}var o}function B(t,e){$(t,e),e.add(t)}function K(t,e,n){$(t,e),e.set(t,n)}function $(t,e){if(e.has(t))throw new TypeError("Cannot initialize the same private elements twice on an object")}function H(t,e){return function(t,e){return e.get?e.get.call(t):e.value}(t,Y(t,e,"get"))}function Y(t,e,n){if(!e.has(t))throw new TypeError("attempted to "+n+" private field on non-instance");return e.get(t)}function G(t,e,n){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return n}var Q=new WeakMap,Z=new WeakMap,F=new WeakSet,J=new WeakSet,V=new WeakSet,X=new WeakSet,tt=new WeakSet,et=new WeakSet;function nt(t){var e,n,r,o=H(this,Q).calculateIssueQuantity(t);e=this,n=Z,r=H(this,Q).issueLottos(o),function(t,e,n){if(e.set)e.set.call(t,n);else{if(!e.writable)throw new TypeError("attempted to set read only private field");e.value=n}}(e,Y(e,n,"set"),r)}function rt(){var e=document.querySelector(".con-lotto-numbers");document.getElementById("span-issued-quntity").textContent=H(this,Z).length,e.innerHTML="",H(this,Z).forEach((function(n){var r=document.createElement("p"),o=document.createTextNode("🎟️"),i=document.createElement("span");i.className="span-lotto-numbers",i.textContent=n.getNumbers().join(t.OUTPUT.lottoNumbersDelimiter),r.appendChild(o),r.appendChild(i),e.appendChild(r)}))}function ot(t,e){var n=H(this,Q).determineLottoRanks(H(this,Z),new x(t,e));return[n,H(this,Q).calculateProfitRate(n)]}function it(t){document.querySelectorAll(".span-winning-count").forEach((function(e,n){e.innerHTML=t[5-n]}))}function at(t){document.querySelector(".span-profit-rate").innerHTML="당신의 총 수익률은 ".concat(t.toFixed(1),"% 입니다.")}function ut(t){document.getElementById(t).classList.remove("hidden")}const ct=function(){document.querySelector(".con-modal").classList.add("hidden")},lt=function(){window.location.reload(!0)};var ft="[ERROR] ",st={isInteger:{function:function(t){return Number.isInteger(t)},error:function(t){return"".concat(ft).concat(t,"(은)는 정수 값이어야 합니다.")}},isAtLeast:{function:function(t,e){return t>=e},error:function(t,e){return"".concat(ft).concat(e,"(은)는 ").concat(t," 이상이어야 합니다.")}},hasLength:{function:function(t,e){return t.length===e},error:function(t,e){return"".concat(ft).concat(e,"의 길이는 ").concat(t,"이어야 합니다.")}},isInRange:{function:function(t,e,n){return t>=e&&t<=n},error:function(t,e,n){return"".concat(ft).concat(n,"(은)는 [").concat(t," ~ ").concat(e,"] 범위 이내의 값이어야 합니다.")}},isUnique:{function:function(t){return t.length===new Set(t).size},error:function(t){return"".concat(ft).concat(t,"(은)는 중복된 요소를 갖지 않아야 합니다.")}}},yt=function(t,e){for(var n=arguments.length,r=new Array(n>2?n-2:0),o=2;o<n;o++)r[o-2]=arguments[o];if(!t.function.apply(t,[e].concat(r))){var i="".concat(t.error.apply(t,r));throw alert(i),new Error(i)}};const mt=function(e){e.preventDefault();var n=e.target.elements.input.value,r=Number(n);return function(e){var n="구입 금액";yt(st.isInteger,e,n),yt(st.isAtLeast,e,t.LOTTO.price,n)}(r),r};function pt(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var bt=function(e,n){var r,o="보너스 번호";yt(st.isInteger,n,o),yt(st.isInRange,n,t.LOTTO.minNumber,t.LOTTO.maxNumber,o),yt(st.isUnique,[].concat(function(t){if(Array.isArray(t))return pt(t)}(r=e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(r)||function(t,e){if(t){if("string"==typeof t)return pt(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?pt(t,e):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[n]),o)};const vt=function(e){e.preventDefault();var n=e.target,r=Array.from(n.elements["input-winning-list"],(function(t){return Number(t.value)})),o=Number(n.elements["input-bonus"].value);return function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r="로또 번호";yt(st.isUnique,e,r),yt(st.hasLength,e,t.LOTTO.count,r),e.forEach((function(e){yt(st.isInteger,e,r),yt(st.isInRange,e,t.LOTTO.minNumber,t.LOTTO.maxNumber,r)})),n&&bt(e,n)}(r,o),[r,o]};function ht(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var dt=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),B(this,et),B(this,tt),B(this,X),B(this,V),B(this,J),B(this,F),K(this,Q,{writable:!0,value:new g}),K(this,Z,{writable:!0,value:void 0})}var e,n;return e=t,(n=[{key:"issueLottosAndPrintInfos",value:function(t){G(this,F,nt).call(this,t),G(this,J,rt).call(this),G(this,et,ut).call(this,"con-lotto-infos"),G(this,et,ut).call(this,"form-winnings")}},{key:"analyzeAndPrintLottoResult",value:function(t,e){var n,r,o=(n=G(this,V,ot).call(this,t,e),r=2,function(t){if(Array.isArray(t))return t}(n)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(n,r)||function(t,e){if(t){if("string"==typeof t)return z(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(t,e):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[0],a=o[1];G(this,X,it).call(this,i),G(this,tt,at).call(this,a),G(this,et,ut).call(this,"con-modal")}}])&&_(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}());document.addEventListener("DOMContentLoaded",(function(){var t=document.getElementById("form-purchase"),e=document.getElementById("form-winnings"),n=document.querySelector(".btn-close"),r=document.querySelector(".btn-restart");t.addEventListener("submit",(function(t){var e=mt(t);dt.issueLottosAndPrintInfos(e)})),e.addEventListener("submit",(function(t){var e,n,r=(e=vt(t),n=2,function(t){if(Array.isArray(t))return t}(e)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,a,u=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(u.push(r.value),u.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(e,n)||function(t,e){if(t){if("string"==typeof t)return ht(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ht(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];dt.analyzeAndPrintLottoResult(o,i)})),n.addEventListener("click",ct),r.addEventListener("click",lt)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,